services:
  db:
    image: pgvector/pgvector:pg17
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    ports:
      - "5432:5432"
    env_file:
      - .env
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=${DB_PASSWORD?Variable not set}
      - POSTGRES_USER=${DB_USER?Variable not set}
      - POSTGRES_DB=${DB_NAME?Variable not set}
    volumes:
      - template-db-data:/var/lib/postgresql/data
  app:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    healthcheck:
    ports:
      - "80:80"
    env_file:
      - .env
    command: "fastapi dev app/main.py --host 0.0.0.0 --port 80"
    develop:
      watch:
        - action: sync
          path: ./app
          target: /app/app
        - action: rebuild
          path: pyproject.toml
    depends_on:
      db:
        condition: service_healthy
        restart: true
networks:
  template-network:
    driver: bridge
volumes:
  template-db-data: